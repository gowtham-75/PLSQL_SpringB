CREATE OR REPLACE PACKAGE PKG_REPORTING AS
  FUNCTION GET_CUSTOMER_ORDER_HISTORY(p_customer_id NUMBER) RETURN SYS_REFCURSOR;
  FUNCTION GET_PRODUCT_SALES(p_product_id NUMBER) RETURN SYS_REFCURSOR;
  FUNCTION GET_ORDER_SUMMARY(p_order_id NUMBER) RETURN SYS_REFCURSOR;
END PKG_REPORTING;
/
CREATE OR REPLACE PACKAGE BODY PKG_REPORTING AS
  FUNCTION GET_CUSTOMER_ORDER_HISTORY(p_customer_id NUMBER) RETURN SYS_REFCURSOR IS
    l_rc SYS_REFCURSOR;
  BEGIN
    OPEN l_rc FOR
      SELECT O.ORDER_ID, O.ORDER_DATE, O.ORDER_STATUS, O.ORDER_TOTAL,
             I.INVOICE_ID, I.TOTAL_AMOUNT, S.SHIPMENT_ID, S.SHIPMENT_STATUS
      FROM ORDERS O
      LEFT JOIN INVOICES I ON O.INVOICE_ID = I.INVOICE_ID
      LEFT JOIN SHIPMENTS S ON O.SHIPMENT_ID = S.SHIPMENT_ID
      WHERE O.CUSTOMER_ID = p_customer_id
      ORDER BY O.ORDER_DATE DESC;
    RETURN l_rc;
  END GET_CUSTOMER_ORDER_HISTORY;

  FUNCTION GET_PRODUCT_SALES(p_product_id NUMBER) RETURN SYS_REFCURSOR IS
    l_rc SYS_REFCURSOR;
  BEGIN
    OPEN l_rc FOR
      SELECT P.PRODUCT_NAME, SUM(OI.QUANTITY) AS TOTAL_UNITS_SOLD, SUM(OI.TOTAL_PRICE) AS TOTAL_REVENUE
      FROM ORDER_ITEMS OI
      JOIN PRODUCTS P ON OI.PRODUCT_ID = P.PRODUCT_ID
      JOIN ORDERS O ON O.ORDER_ID = OI.ORDER_ID
      WHERE OI.PRODUCT_ID = p_product_id
        AND O.ORDER_STATUS = 'COMPLETED'
      GROUP BY P.PRODUCT_NAME;
    RETURN l_rc;
  END GET_PRODUCT_SALES;

  FUNCTION GET_ORDER_SUMMARY(p_order_id NUMBER) RETURN SYS_REFCURSOR IS
    l_rc SYS_REFCURSOR;
  BEGIN
    OPEN l_rc FOR
      SELECT O.ORDER_ID, C.CUSTOMER_NAME, O.ORDER_STATUS, O.ORDER_TOTAL, P.PAYMENT_STATUS, I.TOTAL_AMOUNT AS INVOICE_AMOUNT, S.SHIPMENT_STATUS
      FROM ORDERS O
      JOIN CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
      LEFT JOIN INVOICES I ON O.INVOICE_ID = I.INVOICE_ID
      LEFT JOIN PAYMENTS P ON O.ORDER_ID = P.ORDER_ID
      LEFT JOIN SHIPMENTS S ON O.SHIPMENT_ID = S.SHIPMENT_ID
      WHERE O.ORDER_ID = p_order_id;
    RETURN l_rc;
  END GET_ORDER_SUMMARY;
END PKG_REPORTING;
/
